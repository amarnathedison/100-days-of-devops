There is a critical issue going on with the Nautilus application in Stratos DC. The production support team identified that the application is unable to connect to the database. 
  After digging into the issue, the team found that mariadb service is down on the database server.
Look into the issue and fix the same.

------------------------------------------------------------------------------------------------------
Steps tried:


There is a critical issue going on with the Nautilus application in Stratos DC. The production support team identified that the application is unable to connect to the database. After digging into the issue, the team found that mariadb service is down on the database server.
ChatGPT said:

Got it ‚Äî this is a critical production incident affecting your Nautilus application because the database (MariaDB) is down.
Here‚Äôs a structured way to troubleshoot and fix the issue quickly:

üõ†Ô∏è MariaDB Service Down ‚Äì Action Plan
1Ô∏è‚É£ Immediate Checks (Confirm the Problem)

Run these commands on the DB server:

# Check service status
sudo systemctl status mariadb

# Check recent logs
sudo journalctl -xeu mariadb

# Try manual start
sudo systemctl start mariadb

# Verify it is listening
sudo ss -tlnp | grep mysql


‚úÖ If systemctl start fails ‚Üí note the exact error in logs (it will point to root cause).

2Ô∏è‚É£ Common Root Causes & Fixes

Here are typical reasons MariaDB fails to start:

Cause	How to Check	Fix
Data corruption (InnoDB crash)	journalctl -xeu mariadb shows InnoDB crash messages	Force recovery mode in /etc/my.cnf:
innodb_force_recovery=1 (increase to max 6 if needed)
Restart, take backup, then rebuild tables
Port in use	`ss -tlnp	grep 3306` shows another process using 3306
Disk full	df -h shows 100% usage	Free up space (/var/lib/mysql must have space)
Permission issue	Logs show Can't open mysql.pid or Can't create file	Fix permissions:
sudo chown -R mysql:mysql /var/lib/mysql
Config file error	Logs mention bad syntax in /etc/my.cnf	Fix or comment out offending lines, restart service
3Ô∏è‚É£ Validate After Fix

Once service is started:

# Enable service on boot
sudo systemctl enable mariadb

# Test DB connection
mysql -u root -p -e "SHOW DATABASES;"

# Test from Nautilus application server (if separate)
telnet <db_server_ip> 3306


‚úÖ Confirm Nautilus application can connect again.

4Ô∏è‚É£ Post-Incident Actions (Very Important)

Collect root cause analysis (RCA) logs from journalctl

Create KB article for support team

Setup monitoring & alerting (Prometheus / Grafana / Nagios)

Enable MariaDB slow log & error log rotation to avoid future surprises

Plan backup strategy (daily logical dumps or Percona XtraBackup)

Do you want me to prepare a step-by-step incident resolution runbook (with exact commands) that your team can follow next time to bring MariaDB back up quickly? This will help your support team handle future outages faster.

You said:
Job for mariadb.service failed because the control process exited with error code.
See "systemctl status mariadb.service" and "journalctl -xeu mariadb.service" for details.
ChatGPT said:

Got it ‚Äî this confirms MariaDB failed to start and exited with an error.
To fix this, we need to get details from logs, find the root cause, and restart it properly.

Here‚Äôs an actionable approach you can follow right now:

üõ†Ô∏è Step-by-Step Recovery for mariadb.service Failure
1Ô∏è‚É£ Get the Exact Error

Run these commands on the database server:

# Check service status
sudo systemctl status mariadb.service -l

# Check detailed logs
sudo journalctl -xeu mariadb.service --no-pager | tail -50


Look for:

InnoDB: ... errors (database corruption)

Can't open or Permission denied

Port already in use

Disk full messages

Copy the last 10‚Äì20 lines of error log if you need deeper help.

2Ô∏è‚É£ Fix the Common Root Causes

Based on what you find in logs:

üîß A) If Disk is Full
df -h
sudo du -sh /var/lib/mysql/* | sort -h


Free space:

sudo journalctl --vacuum-time=7d  # clean old logs
sudo rm -rf /var/log/*.gz        # remove rotated logs if safe


Then retry:

sudo systemctl start mariadb

üîß B) If Permission Errors
sudo chown -R mysql:mysql /var/lib/mysql
sudo chmod -R 750 /var/lib/mysql
sudo systemctl restart mariadb

üîß C) If InnoDB Crash

Edit config file /etc/my.cnf or /etc/mysql/my.cnf:

[mysqld]
innodb_force_recovery=1


Then:

sudo systemctl restart mariadb


If it starts:

Take backup of databases (mysqldump)

Remove or fix corrupted tables

Remove innodb_force_recovery and restart clean

üîß D) If Port Conflict
sudo ss -tlnp | grep 3306


Kill conflicting process:

sudo kill -9 <PID>
sudo systemctl start mariadb

3Ô∏è‚É£ Verify Service is Up

Once fixed:

sudo systemctl status mariadb
mysql -u root -p -e "SHOW DATABASES;"


If successful, enable autostart:

sudo systemctl enable mariadb

4Ô∏è‚É£ Validate Application

From Nautilus application server:

telnet <DB_SERVER_IP> 3306


(or mysql -h <DB_SERVER_IP> -u <user> -p)

Confirm application can connect.

Would you like me to give you a ready-to-use runbook (one-page troubleshooting guide) your production support team can keep handy for the next time MariaDB goes down ‚Äî so they can fix it quickly without waiting?

You said:
√ó mariadb.service - MariaDB 10.5 database server
     Loaded: loaded (/usr/lib/systemd/system/mariadb.service; enabled; preset: disabled)
     Active: failed (Result: exit-code) since Thu 2025-09-18 12:49:29 UTC; 1min 13s ago
   Duration: 5.240s
       Docs: man:mariadbd(8)
             https://mariadb.com/kb/en/library/systemd/
    Process: 2272 ExecStartPre=/usr/libexec/mariadb-check-socket (code=exited, status=0/SUCCESS)
    Process: 2306 ExecStartPre=/usr/libexec/mariadb-prepare-db-dir mariadb.service (code=exited, status=1/FAILURE)

Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com mariadb-prepare-db-dir[2306]: Make sure the /var/lib/mysql is empty before running mariadb-prepare-db-dir.
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: mariadb.service: Child 2306 belongs to mariadb.service.
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: mariadb.service: Control process exited, code=exited, status=1/FAILURE
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: mariadb.service: Got final SIGCHLD for state start-pre.
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: mariadb.service: Failed with result 'exit-code'.
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: mariadb.service: Service will not restart (restart setting)
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: mariadb.service: Changed start-pre -> failed
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: mariadb.service: Job 238 mariadb.service/start finished, result=failed
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: Failed to start MariaDB 10.5 database server.
Sep 18 12:49:29 stdb01.stratos.xfusioncorp.com systemd[1]: mariadb.service: Unit entered failed state.
ChatGPT said:

Thanks for sharing the logs ‚Äî this is very helpful.

The key line is here:

Make sure the /var/lib/mysql is empty before running mariadb-prepare-db-dir.

This means the MariaDB data directory is not in the expected state ‚Äî likely corrupted, misconfigured, or partially initialized. The mariadb-prepare-db-dir script (run by systemd before MariaDB starts) failed because it found existing data files but couldn‚Äôt proceed.

üîé Root Cause

MariaDB sees /var/lib/mysql not empty but not properly initialized (maybe leftover files, corruption, or partial reinstall).

This typically happens if:

MariaDB was reinstalled or upgraded but old data files remain

Permissions/ownership got broken

/var/lib/mysql/mysql system database is missing or incomplete

üõ†Ô∏è Resolution Steps
1Ô∏è‚É£ Check Ownership and Permissions
sudo ls -ld /var/lib/mysql
sudo ls -l /var/lib/mysql


Then fix:

sudo chown -R mysql:mysql /var/lib/mysql
sudo chmod 750 /var/lib/mysql


Try restart:

sudo systemctl start mariadb

2Ô∏è‚É£ If It Still Fails: Reinitialize Database (‚ö†Ô∏è Data Loss Warning)

If this is a fresh server (no important data to keep), you can reinitialize:

sudo systemctl stop mariadb
sudo rm -rf /var/lib/mysql/*
sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
sudo systemctl start mariadb


This will create a fresh, empty MariaDB instance with system tables.

3Ô∏è‚É£ If Data Must Be Preserved (Production Scenario)

If this is production data and must be preserved:

Backup existing directory first:

sudo tar czvf /root/mysql-backup-$(date +%F).tar.gz /var/lib/mysql


Run mysqlcheck on tables (if possible) or copy data to another server and attempt recovery there.

Use innodb_force_recovery in /etc/my.cnf to try to start MariaDB in recovery mode and dump data before reinitializing.

4Ô∏è‚É£ Verify After Fix

Once MariaDB starts successfully:

sudo systemctl enable mariadb
mysql -u root -p -e "SHOW DATABASES;"


Then verify application connectivity.

‚úÖ Recommended Action Path

If this is a new environment: Safely delete and reinitialize /var/lib/mysql

If production data exists: Take a backup before deleting anything, attempt to fix permissions first, then reinitialize only if absolutely required.

Would you like me to prepare a safe recovery runbook for production that includes backup, reinitialization, and data restore steps (so you avoid accidental data loss in future outages)? This can be shared with your production support team as a standard operating procedure.

You said:
ls: cannot access '/var/lib/mysql': No such file or directory
ChatGPT said:

Ah ‚Äî this explains the failure completely.

The error now makes perfect sense:

The mariadb-prepare-db-dir script is expecting /var/lib/mysql (the default MariaDB data directory),

but it does not exist at all on your server, so MariaDB cannot initialize or start.

This usually happens when:

The data directory was deleted accidentally

A disk mount containing /var/lib/mysql is missing or unmounted

MariaDB was installed but never initialized

üõ† Fix: Create and Initialize the Data Directory

Since /var/lib/mysql is missing, you need to create and initialize a fresh database directory.
Here‚Äôs the safest step-by-step procedure:

1Ô∏è‚É£ Create the Directory and Set Permissions
sudo mkdir -p /var/lib/mysql
sudo chown -R mysql:mysql /var/lib/mysql
sudo chmod 750 /var/lib/mysql

2Ô∏è‚É£ Initialize the MariaDB Data Directory

Run the initialization command (it will create system tables like mysql, performance_schema, etc.):

sudo mariadb-install-db --user=mysql --basedir=/usr --datadir=/var/lib/mysql


If successful, you should see:

Database MariaDB is initialized

3Ô∏è‚É£ Start MariaDB Service
sudo systemctl start mariadb
sudo systemctl status mariadb

4Ô∏è‚É£ (Optional but Recommended) Secure the Installation

Run the post-install security setup to set root password, remove test DB, etc.:

sudo mysql_secure_installation

5Ô∏è‚É£ Verify Database is Running
mysql -u root -p -e "SHOW DATABASES;"

‚úÖ Outcome

After these steps:

MariaDB will start with a fresh empty data directory.

Your application will connect, but any previous data (if any) is gone ‚Äî so if this is production, you need to restore from backup.

‚ö†Ô∏è Critical Note for Production:
If /var/lib/mysql was on a separate disk or volume, make sure that the disk is mounted correctly before creating a new directory.
Otherwise, you might accidentally initialize on the wrong path, and lose the real data once the disk mounts later.

